{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","validations/isEmpty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/TextField.js","reusable/ErrorBody.js","components/Modal.js","assets/icons/view.svg","assets/icons/edit.svg","assets/icons/trash.svg","assets/icons/info.svg","components/HorizontalRule.js","views/Group/GroupRecord.js","views/Group/GroupContainer.js","validations/productGroup.validation.js","views/Group/AddGroup.js","views/Group/DeleteGroup.js","views/Group/EditGroupRecord.js","views/Group/ExistingGroupContainer.js","views/Group/ExpandableGroupContainer.js","views/Group/EditGroup.js","views/Group/GroupDataTable.js","views/Group/GroupHeader.js","views/Group/index.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","isEmpty","data","keys","trim","_objectWithoutProperties","source","excluded","key","target","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","TextField","name","label","placeholder","require","labelTag","type","onChange","error","disabled","helpText","secondaryLabel","secondaryLabelClick","onBlur","plaintext","className","htmlFor","style","float","cursor","onClick","id","required","defaultProps","ErrorBody","props","children","color","Modal","title","showModal","onClose","size","useState","show","setShow","useEffect","closeButton","HorizontalRule","width","height","backgroundColor","marginBottom","marginTop","connect","state","attributeLists","group","attributes","errors","setProductGroupAttributes","record","setName","choices","setChoices","choicesInput","setChoicesInput","nameError","setNameError","values","concatString","map","val","join","console","log","hasOwnProperty","_errors","split","changedIndex","findIndex","option","newAttributeLists","changedRecord","md","e","filter","display","alignItems","newRecord","Math","floor","random","concat","marginRight","content","freeSet","cilPlus","src","infoIcon","alt","paddingRight","validateProductGroupCreation","productGroupData","productGroupsError","forEach","attributeOption","attributeOptionError","AddGroup","isModal","_setShowCreateForm","loading","setLoading","simulateEscape","document","dispatchEvent","KeyboardEvent","keyCode","clearProductGroupName","clearProductGroupAttributes","clearProductGroupError","signal","AbortController","_createAttribute","groupID","attr","datatype","payload","description","display_order","enum_group","attrPayload","createProductGroupAttribute","then","json","response","ok","attributeID","attributeFieldPayload","attributeset","field","associateGroupWithAttribute","setProductGroupName","Toast","fire","icon","ToastMessage","getAllProductGroups","updateProductGroups","catch","_associateGroupWithAttribute","_createProductGroup","productGroupPayload","createProductGroup","GroupContainer","sm","block","variant","setProductGroupError","item","message","setMessage","STATE","freeze","CANT_DELETE","NOT_DELETED","DELETING","DELETED","deletion","setDeletion","_deleteProductGroup","a","abortController","deleteProductGroup","EditGroupRecord","isEdit","setIsEdit","getValues","prevIsEdit","borderRadius","existingAttributes","attribute","ExpandableGroupContainer","prevShow","draggable","populateExistingGroupAttributes","edit","fields","groups","root","productGroups","setLoader","action","setAction","selectedItem","setSelectedItem","setShowModal","attributesAndPossibleValues","actions","ACTIONS","VIEW","viewIcon","EDIT","editIcon","DELETE","trashIcon","background","padding","DeleteGroup","items","_style","sorter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","possibleValues","GroupHeader","fontWeight","Group","showCreateForm","setShowCreateForm"],"mappings":"4LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iCIIvFC,IATC,SAACC,GACf,YACWZ,IAATY,GACS,OAATA,GACiB,kBAATA,GAAkD,IAA7BjB,OAAOkB,KAAKD,GAAML,QAC9B,kBAATK,GAA4C,IAAvBA,EAAKE,OAAOP,S,iCCJ9B,SAASQ,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAK5B,EADL6B,ECHS,SAAuCH,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAK5B,EAFL6B,EAAS,GACTC,EAAazB,OAAOkB,KAAKG,GAG7B,IAAK1B,EAAI,EAAGA,EAAI8B,EAAWb,OAAQjB,IACjC4B,EAAME,EAAW9B,GACb2B,EAASI,QAAQH,IAAQ,IAC7BC,EAAOD,GAAOF,EAAOE,IAGvB,OAAOC,EDTM,CAA6BH,EAAQC,GAGlD,GAAItB,OAAO2B,sBAAuB,CAChC,IAAIC,EAAmB5B,OAAO2B,sBAAsBN,GAEpD,IAAK1B,EAAI,EAAGA,EAAIiC,EAAiBhB,OAAQjB,IACvC4B,EAAMK,EAAiBjC,GACnB2B,EAASI,QAAQH,IAAQ,GACxBvB,OAAO6B,UAAUC,qBAAqBC,KAAKV,EAAQE,KACxDC,EAAOD,GAAOF,EAAOE,IAIzB,OAAOC,E,oEEjBT,mCAIMQ,EAAY,SAAC,GAgBZ,IAfLC,EAeI,EAfJA,KACAC,EAcI,EAdJA,MACAC,EAaI,EAbJA,YACAC,EAYI,EAZJA,QACAC,EAWI,EAXJA,SACAC,EAUI,EAVJA,KACAC,EASI,EATJA,SACA5B,EAQI,EARJA,MACA6B,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEA,OACE,eAAC,IAAD,CAAYC,UAAU,OAAtB,UACE,eAAC,IAAD,CAAQC,QAASf,EAAjB,UACGC,EAAO,IACPG,EACC,gCACE,+BAAOA,MAEP,QAEN,sBACEU,UAAU,kCACVE,MAAO,CAAEC,MAAO,QAASC,OAAQ,WACjCC,QAAS,WACPR,KAJJ,SAOGD,IAEH,cAAC,IAAD,CACEL,KAAMA,EACNe,GAAIpB,EACJA,KAAMA,EACNM,SAAUA,EACV5B,MAAOA,EACPwB,YAAaA,EACbmB,WAAUlB,EACVK,SAAUA,EACVI,OAAQA,EACRC,UAAWA,IAEb,mBAAGC,UAAU,QAAb,SAAsBL,IACtB,cAAC,IAAD,UAAYF,QAKlBR,EAAUuB,aAAe,CACvBtB,KAAM,OACNC,MAAO,QACPC,YAAa,mBACbC,SAAS,EACTC,UAAU,EACVI,UAAU,EACVC,SAAU,GACVI,WAAW,GAGEd,O,iCCrEf,mCAqBewB,IAhBG,SAACC,GACjB,OAAIzC,YAAQyC,EAAMC,UACT,yBAIP,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWC,MAAM,MAAMV,MAAO,CAAEU,MAAO,OAAvC,SACGF,EAAMC,iB,+ECXXE,EAAQ,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,KAASP,EAAY,sDAC/D,EAAwBQ,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,WACRD,GAAQ,KACP,CAACL,IAGF,mCACE,eAAC,IAAD,CAAQI,KAAMA,EAAMH,QAAS,kBAAMA,GAAQ,IAAQC,KAAMA,EAAzD,UACE,cAAC,IAAD,CAAcK,aAAW,EAAzB,SACE,cAAC,IAAD,UAAcR,MAEhB,cAAC,IAAD,UAAaJ,EAAMC,iBAM3BE,EAAML,aAAe,CACnBS,KAAM,MAGOJ,O,iCC1BA,QAA0B,kC,iCCA1B,QAA0B,kC,iCCA1B,QAA0B,mC,iCCA1B,QAA0B,kC,iCCAzC,iBAEMU,EAAiB,SAAC,GAAiC,IACjDrB,EAAQ,CACZsB,MAAO,OACPC,OAAQ,EACRC,gBAAiB,oBACjBC,aALoD,EAA9BA,aAMtBC,UANoD,EAAhBA,WAQtC,OACE,8BACE,qBAAK1B,MAAOA,OAKlBqB,EAAef,aAAe,CAC5BmB,aAAc,UACdC,UAAW,WAGEL,O,qJCsFAM,eAPS,SAACC,GACvB,MAAO,CACLC,eAAgBD,EAAME,MAAMC,WAC5BC,OAAQJ,EAAME,MAAME,UAIgB,CAAEC,+BAA3BN,EAnGK,SAAC,GAA0B,IAAxBO,EAAuB,EAAvBA,OAAW1B,EAAY,0BAC5C,EAAwBQ,mBAAS,MAAjC,mBAAOhC,EAAP,KAAamD,EAAb,KACA,EAA8BnB,mBAAS,IAAvC,mBAAOoB,EAAP,KAAgBC,EAAhB,KACA,EAAwCrB,mBAAS,IAAjD,mBAAOsB,EAAP,KAAqBC,EAArB,KACA,EAAkCvB,mBAAS,IAA3C,mBAAOwB,EAAP,KAAkBC,EAAlB,KAwDA,OAhDAtB,qBAAU,WACR,GAAKpD,YAAQmE,EAAOQ,QAKlBH,EAAgB,QALW,CAC3B,IAAMI,EAAeT,EAAOQ,OAAOE,KAAI,SAACC,GAAD,OAASA,EAAInF,SAAOoF,KAAK,KAChEC,QAAQC,IAAI,gBAAiBL,GAC7BJ,EAAgBI,MAIjB,IAEHxB,qBAAU,WACR,GAAIX,EAAMwB,QAAUxB,EAAMwB,OAAOiB,eAAef,EAAO9B,IAAK,CAC1D,IAAM8C,EAAU1C,EAAMwB,OAAOE,EAAO9B,IAChC8C,GAAWA,EAAQlE,MACrByD,EAAaS,EAAQlE,SAGxB,CAACwB,EAAMwB,SAEVb,qBAAU,WACR,GAAKpD,YAAQuE,GAUXD,EAAW,QAVe,CAC1B,IAAMK,EAASJ,EAAaa,MAAM,KAClCd,EACEK,EAAOE,KAAI,SAAClF,GACV,MAAO,CACLA,MAAOA,EAAMQ,eAOpB,CAACoE,IAEJnB,qBAAU,WACR,IAAIiC,EAAe5C,EAAMqB,eAAewB,WACtC,SAACC,GAAD,OAAYA,EAAOlD,KAAO8B,EAAO9B,MAE/BmD,EAAiB,YAAO/C,EAAMqB,gBAC5B2B,EAAgB,CACpBpD,GAAI8B,EAAO9B,GACXpB,OACA0D,OAAQN,GAEVmB,EAAkBH,GAAgBI,EAClChD,EAAMyB,0BAA0BsB,KAC/B,CAACvE,EAAMoD,IAGR,eAAC,IAAD,CAAMtC,UAAU,4BAAhB,UACE,cAAC,IAAD,CAAM2D,GAAG,IAAT,SACE,cAAC1E,EAAA,EAAD,CACEE,MAAM,YACNC,YAAY,gBACZI,SAAU,SAACoE,GACTvB,EAAQuB,EAAEnF,OAAOb,QAEnBA,MAAOwE,EAAOlD,KACdO,MAAOiD,MAGX,cAAC,IAAD,CAAMiB,GAAG,IAAT,SACE,cAAC1E,EAAA,EAAD,CACEE,MAAM,kBACNC,YAAY,eACZI,SAAU,SAACoE,GACTnB,EAAgBmB,EAAEnF,OAAOb,QAE3BA,MAAO4E,MAGX,cAAC,IAAD,CAAMmB,GAAG,IAAT,SACE,cAAC,IAAD,CAAStD,QA9EM,WACnBK,EAAMyB,0BACJzB,EAAMqB,eAAe8B,QAAO,SAACL,GAAD,OAAYA,EAAOlD,KAAO8B,EAAO9B,QA4E3D,SACE,cAAC,IAAD,CAAON,UAAU,cAAcd,KAAK,2BClC/B2C,iBANS,SAACC,GACvB,MAAO,CACLC,eAAgBD,EAAME,MAAMC,cAIQ,CAAEE,+BAA3BN,EAnDQ,SAACnB,GAYtB,OACE,gCACGA,EAAMqB,eAAee,KAAI,SAACV,GAAD,OACxB,cAAC,EAAD,CAAaA,OAAQA,OAGvB,sBAAKpC,UAAU,yDAAf,UACE,8BACE,eAAC,IAAD,CACEA,UAAU,OACVE,MAAO,CAAE4D,QAAS,OAAQC,WAAY,UACtC1D,QAtBkB,WAE1B,IACM2D,EAAY,CAChB1D,GAFkB2D,KAAKC,MAAsB,IAAhBD,KAAKE,SAAuB,GAGzDjF,KAAM,KACN0D,OAAQ,IAEVlC,EAAMyB,0BAA0BzB,EAAMqB,eAAeqC,OAAOJ,KAWtD,UAKE,qBAAK9D,MAAO,CAAEmE,YAAa,IAA3B,SACE,cAAC,IAAD,CAAOC,QAASC,IAAQC,QAASvD,KAAM,SAN3C,qBAWF,8BACE,sBACEjB,UAAU,4BACVE,MAAO,CAAEmE,YAAa,QAFxB,UAIE,qBAAKI,IAAKC,IAAUC,IAAI,OAAOzE,MAAO,CAAE0E,aAAc,YACtD,wG,oICzBGC,EAnBsB,SAACC,GAEpC,IAAIC,EAAqB,GAczB,OAbAD,EAAiB7C,WAAW+C,SAAQ,SAACC,GACnC,IAAIC,EAAuB,GACvBjH,YAAQgH,EAAgB/F,QAC1BgG,EAAqBhG,KAAO,gCAEzBjB,YAAQiH,KACXH,EAAmBE,EAAgB3E,IAAM4E,MAIzCjH,YAAQ6G,EAAiB5F,QAC3B6F,EAAkB,KAAW,qCAExBA,G,iBCOHI,EAAW,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,mBAAuB3E,EAAY,gDAC9D,EAA8BQ,oBAAS,GAAvC,mBAAOoE,EAAP,KAAgBC,EAAhB,KAEMvD,EAAQtB,EAAMsB,MAGdwD,EAAiB,SAAC5B,GACtB6B,SAASC,cAAc,IAAIC,cAAc,UAAW,CAAEC,QAAS,OAIjEvE,qBAAU,WACRX,EAAMmF,wBACNnF,EAAMoF,8BACNpF,EAAMqF,2BACL,IAEH,IAmDMC,GADkB,IAAIC,iBACGD,OA2CzBE,EAAmB,SAACC,GA5EjBnE,EAAMC,WAAWa,KAAI,SAACsD,GAC3B,IAIIC,EAJEnH,EAAI,UAAM8C,EAAM9C,KAAZ,cAAsBkH,EAAKlH,MAC/B0D,EAASwD,EAAKxD,OAIhB3E,YAAQ2E,GACVyD,EAAW,QAE6C,IAApDzD,EAAOiB,QAAO,SAACd,GAAD,MAAuB,KAAdA,EAAInF,SAAcC,SAC3CwI,EAAW,QAEbA,EAAW,QAGb,IAAIC,EAAU,CACZD,SAAUA,EACVnH,KAAMA,EACNqH,YAAavE,EAAM9C,KACnBsH,cAAe,GASjB,MANiB,SAAbH,IACFC,EAAQG,WAAa,CACnBvH,KAAMA,EACN0D,OAAQA,IAGL0D,KAiDWtB,SAAQ,SAAC0B,GAC3BC,YAA4BX,EAAQU,GACjCE,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,KACP,GAD4B,EAAfC,SACAC,GAAI,CACf9D,QAAQC,IAAI,6BACZ,IAAM8D,EAAcH,EAAKvG,IA/CE,SAAC6F,EAASa,GAC7C,IAAMC,EAAwB,CAC5BC,aAAcf,EACdgB,MAAOH,GAETI,YAA4BpB,EAAQiB,GACjCL,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,KACP,GAD4B,EAAfC,SACAC,GACX9D,QAAQC,IAAI,kCAEZxC,EAAMyB,0BAA0B,IAEhCzB,EAAM2G,oBAAoB,IAC1B9B,GAAW,GACX+B,IAAMC,KAAK,CACTC,KAAM,UACN1G,MAAO2G,YAAa,UAAW,4BAEjCjC,IACAkC,cAAsBd,MAAK,YAAyB,IAAtBE,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,KAClCC,EAASC,IACXrG,EAAMiH,oBAAoBd,WAK9B,IAAK,IAAMrI,KADX+G,GAAW,GACOsB,EACZ5J,OAAOkG,eAAenE,KAAK6H,EAAMrI,IACnC8I,IAAMC,KAAK,CACTC,KAAM,UACN1G,MAAO2G,YAAa,UAAWZ,EAAKrI,SAM7CoJ,OAAM,SAAChE,GACN,MAAMA,KAWFiE,CAA6B1B,EAASa,QAGtC,IAAK,IAAMxI,KADX+G,GAAW,GACOsB,EACZ5J,OAAOkG,eAAenE,KAAK6H,EAAMrI,IACnC8I,IAAMC,KAAK,CACTC,KAAM,UACN1G,MAAO2G,YAAa,UAAWZ,EAAKrI,SAM7CoJ,OAAM,SAAChE,GACN,MAAMA,SAKRkE,EAAsB,WAC1B,IAAMxB,EArHoB,WAC1B,IAAIrI,YAAQ+D,EAAMC,YAOlB,MAAO,CACL/C,KAAM8C,EAAM9C,MAPZoI,IAAMC,KAAK,CACTC,KAAM,UACN1G,MAAO2G,YAAa,UAAW,yCAiHnBM,GACZ9J,YAAQqI,GACVf,GAAW,GAGbyC,YAAmBhC,EAAQM,GACxBM,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,KACP,GAD4B,EAAfC,SACAC,GAAI,CACf9D,QAAQC,IAAI,yBACZ,IAAMiD,EAAUU,EAAKvG,GAIrB4F,EAAiBC,QAGjB,IAAK,IAAM3H,KADX+G,GAAW,GACOsB,EACZ5J,OAAOkG,eAAenE,KAAK6H,EAAMrI,IACnC8I,IAAMC,KAAK,CACTC,KAAM,UACN1G,MAAO2G,YAAa,UAAWZ,EAAKrI,SAM7CoJ,OAAM,SAAChE,GACN,MAAMA,MAaZ,OACE,mCACE,eAAC,IAAD,CAAO5D,UAAWoF,EAAU,OAAS,gCAArC,UACGA,EAAU,KACT,oBAAIpF,UAAU,8BAAd,uBAEF,eAAC,IAAD,WACE,cAACf,EAAA,EAAD,CACEC,KAAK,OACLC,MAAM,aACNC,YAAY,wBACZI,SA5K2B,SAACoE,GACpClD,EAAM2G,oBAAoBzD,EAAEnF,OAAOb,QA4K3BA,MAAO8C,EAAMsB,MAAM9C,KACnBO,MAAOiB,EAAMsB,MAAME,OAAOhD,MAAQwB,EAAMsB,MAAME,OAAOhD,OAEvD,cAAC+I,EAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAIvE,GAAG,IAAhB,SACE,cAAC,IAAD,CACEwE,OAAK,EACLC,QAAQ,UACRxH,MAAM,OACNP,QAAS,SAACuD,GACR4B,IACAH,GAAsBA,GAAmB,IAN7C,sBAaF,cAAC,IAAD,CAAM6C,GAAG,IAAIvE,GAAG,IAAhB,SACE,cAAC,IAAD,CACEwE,OAAK,EACLvH,MAAM,OACNP,QA5CQ,WACpB,IAAM6B,EAAS2C,EAA6B7C,GAC5CtB,EAAM2H,qBAAqBnG,GACvBjE,YAAQiE,KACVqD,GAAW,GACXuC,MAwCUpI,SAAU4F,EAJZ,SAMGA,EAAU,cAAC,KAAD,CAAU1E,MAAM,YAAYK,KAAK,OAAU,uBAUtEkE,EAAS3E,aAAe,CACtB4E,SAAS,GASIvD,iBANS,SAACC,GACvB,MAAO,CACLE,MAAOF,EAAME,SAIuB,CACtCqF,wBACAM,wBACAxF,8BACAkG,yBACAtC,2BACAD,gCACAD,2BAPahE,CAQZsD,I,gOC5KYtD,cAAQ,KAAM,CAAE8F,yBAAhB9F,EAvFY,SAAC,GAAwB,IAAtByG,EAAqB,EAArBA,KAAS5H,EAAY,wBACjD,EAA8BQ,mBAC5B,6DAC8B,iCAASoH,EAAKpJ,OAD5C,eADF,mBAAOqJ,EAAP,KAAgBC,EAAhB,KAOMC,EAAQxL,OAAOyL,OAAO,CAC1BC,YAAa,cACbC,YAAa,cACbC,SAAU,WACVC,QAAS,YAQX,EAAgC5H,mBAASuH,EAAMG,aAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,uCAAG,WAAOX,GAAP,iBAAAY,EAAA,6DACpBC,EAAkB,IAAIlD,gBACtBD,EAASmD,EAAgBnD,OAC/BgD,EAAYP,EAAMI,UAClBL,EACE,0CACW,iCAASF,EAAKpJ,OADzB,mBAIF+D,QAAQC,IAAI,2BAA4BoF,GATd,SAUpBc,YAAmBpD,EAAQsC,EAAKhI,IAAIsG,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtD7D,QAAQC,IAAI2D,EAAMC,GACdA,EAASC,IACXiC,EAAYP,EAAMK,SAClBN,EACE,8BACE,iCAASF,EAAKpJ,OADhB,6BApBNuG,SAASC,cAAc,IAAIC,cAAc,UAAW,CAAEC,QAAS,MAyB3D0B,IAAMC,KAAK,CACTC,KAAM,UACN1G,MAAO2G,YAAa,UAAW,sBAGjCuB,EAAYP,EAAME,aAClBH,EACE,8BACE,iCAASF,EAAKpJ,OADhB,8EA3BoB,OAoC1BwI,cAAsBd,MAAK,YAAyB,IAAtBE,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,KAClCC,EAASC,IACXrG,EAAMiH,oBAAoBd,MAtCJ,2CAAH,sDA2CzB,OACE,sBAAK7G,UAAU,cAAf,UACGuI,EACAQ,GAAYN,EAAMK,SAAWC,GAAYN,EAAME,YAAc,KAC5D,cAAC,IAAD,CACE/H,MAAM,SACNlB,SAAUqJ,GAAYN,EAAMI,SAC5BxI,QAAS,WACP4I,EAAoBX,IAJxB,SAOGS,GAAYN,EAAMI,SACjB,cAAC,KAAD,CAAUjI,MAAM,YAAYK,KAAK,OAC/B8H,GAAYN,EAAMG,YACpB,SACE,a,kBC1BCS,EA1DS,SAAC,GAAgB,IAAdjH,EAAa,EAAbA,OACzB,EAA4BlB,oBAAS,GAArC,mBAAOoI,EAAP,KAAeC,EAAf,KAMMC,EAAY,WAChB,IAAI5G,EAMJ,MALwB,SAApBR,EAAOiE,SACTzD,EAAS,GACoB,SAApBR,EAAOiE,WAChBzD,EAASR,EAAOqE,WAAW7D,QAEtBA,GAGT,OACE,eAAC,IAAD,CAAM5C,UAAU,4BAAhB,UACE,cAAC,IAAD,CAAM2D,GAAG,IAAT,SACE,cAAC1E,EAAA,EAAD,CACEC,KAAK,gBACLC,MAAM,OACNC,YAAY,iBACZxB,MAAOwE,EAAOmE,YACdxG,WAAYuJ,EACZ5J,UAAW4J,MAGf,cAAC,IAAD,CAAM3F,GAAG,IAAT,SACE,cAAC1E,EAAA,EAAD,CACEC,KAAK,gBACLC,MAAM,kBACNC,YACEnB,YAAQuL,KAAe,wBAA0B,kBAEnDzJ,WAAYuJ,EACZ5J,UAAW4J,EACX1L,MAAO4L,IACJ1G,KAAI,SAAClF,GAAD,OAAWA,EAAMA,SACrBoF,KAAK,SAGZ,cAAC,IAAD,CAAMW,GAAG,IAAT,SACE,cAAC,IAAD,CACE/C,MAAM,OACNuH,OAAO,EACP9H,QA5CiB,SAACuD,GACxB2F,GAAU,SAACE,GAAD,OAAiBA,MA4CrBrB,QAASkB,EAAS,GAAK,UACvBpJ,MAAO,CAAEwJ,aAAc,MALzB,SAOGJ,EAAS,eAAiB,eCpCtBzH,eANS,SAACC,GACvB,MAAO,CACLG,WAAYH,EAAME,MAAM2H,sBAIY,KAAzB9H,EAjBgB,SAAC,GAAoB,IAAlBI,EAAiB,EAAjBA,WAChC,OACE,sBAAKjC,UAAU,OAAf,UACE,oBAAIA,UAAU,OAAd,iCACCiC,EAAWa,KAAI,SAAC8G,GAAD,OACd,cAAC,EAAD,CAAiBxH,OAAQwH,a,kBC+BlBC,EAnCkB,WAC/B,MAAwB3I,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACE,gCACE,cAACG,EAAA,EAAD,IACA,qBAAKvB,UAAU,6BAAf,SACE,cAAC,IAAD,CAASK,QARI,SAACuD,GAClBxC,GAAQ,SAAC0I,GAAD,OAAeA,MAOWC,WAAW,EAAzC,SACG5I,EAAO,kBAAe,oBAG1BA,EACC,gCACE,cAAC8G,EAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAIvE,GAAG,IAAhB,SACE,cAAC,IAAD,CAASwE,OAAK,EAACC,QAAQ,UAAUxH,MAAM,OAAvC,sBAIF,cAAC,IAAD,CAAMsH,GAAG,IAAIvE,GAAG,IAAhB,SACE,cAAC,IAAD,CAASwE,OAAK,EAACvH,MAAM,OAArB,0BAMJ,SCoBKiB,eANS,SAACC,GACvB,MAAO,CACLE,MAAOF,EAAME,SAIuB,CACtCqF,wBACAM,wBACAxF,8BACA6H,qCAJanI,EAzCG,SAAC,GAAuC,IAArCoI,EAAoC,EAApCA,KAAM3B,EAA8B,EAA9BA,KAAMlD,EAAwB,EAAxBA,QAAY1E,EAAY,yCAWvD,OAVAW,qBAAU,WACJ4I,IAAShM,YAAQqK,KACnBrF,QAAQC,IAAI,gBAAiBoF,GACxBrK,YAAQqK,EAAK4B,UAChBxJ,EAAMsJ,gCAAgC1B,EAAK4B,QAC3CxJ,EAAM2G,oBAAoBiB,EAAKpJ,UAGlC,CAACoJ,IAGF,8BACE,eAAC,IAAD,CAAOtI,UAAWoF,EAAU,OAAS,gCAArC,UACGA,EAAU,KACT,oBAAIpF,UAAU,8BAAd,uBAEF,eAAC,IAAD,WACE,cAACf,EAAA,EAAD,CACEC,KAAK,OACLC,MAAM,aACNC,YAAY,wBACZxB,MAAO8C,EAAMsB,MAAM9C,KACnBQ,UAAU,EACVK,WAAW,IAEb,cAAC,EAAD,IAEA,cAAC,EAAD,eC8HK8B,eANS,SAACC,GACvB,MAAO,CACLqI,OAAQrI,EAAMsI,KAAKC,iBAIiB,CACtC1C,wBACA2C,cACAxE,iCAHajE,EAtJQ,SAACnB,GACtBW,qBAAU,WACRX,EAAM4J,WAAU,GAChB5C,cAAsBd,MAAK,YAAyB,IAAtBE,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,KAClCC,EAASC,IACXrG,EAAMiH,oBAAoBd,GAE5BnG,EAAM4J,WAAU,QAEjB,IAEH,IAWA,EAA4BpJ,mBAAS,IAArC,mBAAOqJ,EAAP,KAAeC,EAAf,KACA,EAAwCtJ,mBAAS,IAAjD,mBAAOuJ,EAAP,KAAqBC,EAArB,KACA,EAAkCxJ,oBAAS,GAA3C,mBAAOH,EAAP,KAAkB4J,EAAlB,KAEM1I,EAAa,SAACqG,GAClB,OAAOA,EAAK4B,OAAOrM,OAAS,EAC1B,+BAAOyK,EAAK4B,OAAOpH,KAAI,SAACsD,GAAD,OAAUA,EAAKlH,QAAM8D,KAAK,QAEjD,sBAAMhD,UAAU,eAAhB,sCAIE4K,EAA8B,SAACtC,GACnC,OAAOA,EAAK4B,OAAOrM,OAAS,EAC1ByK,EAAK4B,OAAOpH,KAAI,SAACsD,GAAD,OACd,+BACE,oBAAIpG,UAAU,mBAAmBE,MAAO,CAAEsB,MAAO,OAAjD,SACG4E,EAAKG,cAEW,SAAlBH,EAAKC,SACJD,EAAKK,WAAW7D,QACd,6BACGwD,EAAKK,WAAW7D,OAAOE,KAAI,SAACsD,GAAD,OAAUA,EAAKxI,SAAOoF,KAAK,QAI3D,8DAKN,sBAAMhD,UAAU,eAAhB,2CAIE6K,EAAU,SAACvC,GAAD,OACd,qCACE,cAAC,IAAD,CACEjI,QAAS,WACPK,EAAMoF,8BACN4E,EAAgBpC,GAChBkC,EAAUM,IAAQC,MAClBJ,GAAa,IAEf7J,MAAM,aAPR,SASE,qBAAK2D,IAAKuG,IAAUrG,IAAI,WAE1B,cAAC,IAAD,CACEtE,QAAS,WACPK,EAAMoF,8BACN4E,EAAgBpC,GAChBkC,EAAUM,IAAQG,MAClBN,GAAa,IAEf7J,MAAM,aAPR,SASE,qBAAK2D,IAAKyG,IAAUvG,IAAI,WAE1B,cAAC,IAAD,CACEtE,QAAS,WACPqK,EAAgBpC,GAChBkC,EAAUM,IAAQK,QAClBR,GAAa,IAEf7J,MAAM,eANR,SAQE,qBAAK2D,IAAK2G,IAAWzG,IAAI,iBAK/B,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEzE,MAAO,CAAEmL,WAAY,QAAS3B,aAAc,OAAQ4B,QAAS,QAD/D,UAGGvK,EACC,eAACF,EAAA,EAAD,CACEE,UAAWA,EACXD,MAAK,UAAKyJ,EAAL,YAAeE,EAAavL,MACjC8B,QAAS2J,EACT1J,KAAiB,SAAXsJ,EAAoB,KAAO,KAJnC,UAMc,WAAXA,EAAsB,cAACgB,EAAD,CAAajD,KAAMmC,IAAmB,KACjD,SAAXF,EACC,cAAC,EAAD,CAAWjC,KAAMmC,EAAcrF,SAAS,EAAM6E,MAAM,IAClD,QAEJ,KACJ,cAAC,IAAD,CACEuB,MAAO9K,EAAMyJ,OACbD,OAvGO,CACb,CAAE1L,IAAK,KAAMiN,OAAQ,CAAEjK,MAAO,MAAQqC,QAAQ,GAC9C,CAAE1E,MAAO,gBAAiBX,IAAK,OAAQiN,OAAQ,CAAEjK,MAAO,QACxD,CACEhD,IAAK,iBACLW,MAAO,+BACPsM,OAAQ,CAAEjK,MAAO,QAEnB,CAAEhD,IAAK,SAAUiN,OAAQ,CAAEjK,MAAO,OAASkK,QAAQ,EAAO7H,QAAQ,IAgG5D8H,aAAW,EACXC,oBAAkB,EAClBC,aAAc,GACdC,OAAK,EACLJ,QAAM,EACNK,YAAU,EACVC,YAAa,CACX/J,WAAY,SAACqG,GAAD,OAAU,6BAAKrG,EAAWqG,MACtC2D,eAAgB,SAAC3D,GAAD,OACd,uBAAOpI,MAAO,CAAEsB,MAAO,QAAUxB,UAAU,QAA3C,SACG4K,EAA4BtC,MAGjCiC,OAAQ,SAACjC,GAAD,OAAU,6BAAKuC,EAAQvC,SAInC,sBAAKtI,UAAU,4BAAf,UACE,qBAAKyE,IAAKC,IAAUC,IAAI,OAAOzE,MAAO,CAAE0E,aAAc,YACtD,sIC9HKsH,EAvBK,SAAC,GAA4B,IAA1B7G,EAAyB,EAAzBA,mBACrB,OACE,8BACE,sBAAKrF,UAAU,mDAAf,UACE,oBAAIA,UAAU,kCAAd,mBACA,cAAC,IAAD,CAAM2D,GAAG,IAAT,SACE,cAAC,IAAD,CACEwE,OAAK,EACLvH,MAAM,UACNP,QAAS,WACPgF,GAAmB,IAJvB,SAOE,sBAAMnF,MAAO,CAAEU,MAAO,OAAQuL,WAAY,KAA1C,uCCGGC,UAdD,WACZ,MAA4ClL,oBAAS,GAArD,mBAAOmL,EAAP,KAAuBC,EAAvB,KACA,OACE,qCACE,cAAC,EAAD,CAAajH,mBAAoBiH,IAChCD,EACC,cAAClH,EAAA,EAAD,CAAUC,SAAS,EAAOC,mBAAoBiH,IAC5C,KACJ,oBAAItM,UAAU,6BAAd,gCACA,cAAC,EAAD","file":"static/js/13.78cf6966.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const isEmpty = (data) => {\n  return (\n    data === undefined ||\n    data === null ||\n    (typeof data === 'object' && Object.keys(data).length === 0) ||\n    (typeof data === 'string' && data.trim().length === 0)\n  )\n}\n\nexport default isEmpty\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport { CFormGroup, CLabel, CInput } from '@coreui/react'\nimport ErrorBody from '../reusable/ErrorBody'\n\nconst TextField = ({\n  name,\n  label,\n  placeholder,\n  require,\n  labelTag,\n  type,\n  onChange,\n  value,\n  error,\n  disabled,\n  helpText,\n  secondaryLabel,\n  secondaryLabelClick,\n  onBlur,\n  plaintext,\n}) => {\n  return (\n    <CFormGroup className=\"mb-4\">\n      <CLabel htmlFor={name}>\n        {label}{' '}\n        {labelTag ? (\n          <small>\n            <code>{labelTag}</code>\n          </small>\n        ) : null}\n      </CLabel>\n      <span\n        className=\"font-weight-bold text-secondary\"\n        style={{ float: 'right', cursor: 'pointer' }}\n        onClick={() => {\n          secondaryLabelClick()\n        }}\n      >\n        {secondaryLabel}\n      </span>\n      <CInput\n        type={type}\n        id={name}\n        name={name}\n        onChange={onChange}\n        value={value}\n        placeholder={placeholder}\n        required={require ? true : false}\n        disabled={disabled}\n        onBlur={onBlur}\n        plaintext={plaintext}\n      />\n      <p className=\"small\">{helpText}</p>\n      <ErrorBody>{error}</ErrorBody>\n    </CFormGroup>\n  )\n}\n\nTextField.defaultProps = {\n  name: 'Name',\n  label: 'Label',\n  placeholder: 'Placeholder here',\n  require: false,\n  labelTag: false,\n  disabled: false,\n  helpText: '',\n  plaintext: false,\n}\n\nexport default TextField\n","import React from 'react'\n\nimport { CForm, CFormText } from '@coreui/react'\nimport isEmpty from '../validations/isEmpty'\n\nconst ErrorBody = (props) => {\n  if (isEmpty(props.children)) {\n    return <span></span>\n  }\n\n  return (\n    <>\n      <CForm>\n        <CFormText color=\"red\" style={{ color: 'red' }}>\n          {props.children}\n        </CFormText>\n      </CForm>\n    </>\n  )\n}\n\nexport default ErrorBody\n","import { CModal, CModalBody, CModalHeader, CModalTitle } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\n\nconst Modal = ({ title, showModal, onClose, size, ...props }) => {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    setShow(true)\n  }, [showModal])\n\n  return (\n    <>\n      <CModal show={show} onClose={() => onClose(false)} size={size}>\n        <CModalHeader closeButton>\n          <CModalTitle>{title}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.children}</CModalBody>\n      </CModal>\n    </>\n  )\n}\n\nModal.defaultProps = {\n  size: 'lg',\n}\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/view.ba2eff2b.svg\";","export default __webpack_public_path__ + \"static/media/edit.a2e87322.svg\";","export default __webpack_public_path__ + \"static/media/trash.f88bd880.svg\";","export default __webpack_public_path__ + \"static/media/info.5733e5ae.svg\";","import React from 'react'\n\nconst HorizontalRule = ({ marginBottom, marginTop }) => {\n  const style = {\n    width: '100%',\n    height: 1,\n    backgroundColor: 'rgba(0,0,0,0.125)',\n    marginBottom: marginBottom,\n    marginTop: marginTop,\n  }\n  return (\n    <div>\n      <div style={style}></div>\n    </div>\n  )\n}\n\nHorizontalRule.defaultProps = {\n  marginBottom: '1.75rem',\n  marginTop: '1.75rem',\n}\n\nexport default HorizontalRule\n","import React, { useState, useEffect } from 'react'\nimport { CCol, CRow, CButton } from '@coreui/react'\nimport { CIcon } from '@coreui/icons-react'\nimport TextField from 'src/components/TextField'\n\nimport { connect } from 'react-redux'\nimport { setProductGroupAttributes } from 'src/reducers/actions/index'\nimport isEmpty from 'src/validations/isEmpty'\n\nconst GroupRecord = ({ record, ...props }) => {\n  const [name, setName] = useState(null)\n  const [choices, setChoices] = useState([])\n  const [choicesInput, setChoicesInput] = useState('')\n  const [nameError, setNameError] = useState('')\n\n  const handleDelete = () => {\n    props.setProductGroupAttributes(\n      props.attributeLists.filter((option) => option.id !== record.id)\n    )\n  }\n\n  useEffect(() => {\n    if (!isEmpty(record.values)) {\n      const concatString = record.values.map((val) => val.value).join(',')\n      console.log('RECORD VALUES', concatString)\n      setChoicesInput(concatString)\n    } else {\n      setChoicesInput('')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (props.errors && props.errors.hasOwnProperty(record.id)) {\n      const _errors = props.errors[record.id]\n      if (_errors && _errors.name) {\n        setNameError(_errors.name)\n      }\n    }\n  }, [props.errors])\n\n  useEffect(() => {\n    if (!isEmpty(choicesInput)) {\n      const values = choicesInput.split(',')\n      setChoices(\n        values.map((value) => {\n          return {\n            value: value.trim(),\n          }\n        })\n      )\n    } else {\n      setChoices([])\n    }\n  }, [choicesInput])\n\n  useEffect(() => {\n    let changedIndex = props.attributeLists.findIndex(\n      (option) => option.id === record.id\n    )\n    let newAttributeLists = [...props.attributeLists]\n    const changedRecord = {\n      id: record.id,\n      name,\n      values: choices,\n    }\n    newAttributeLists[changedIndex] = changedRecord\n    props.setProductGroupAttributes(newAttributeLists)\n  }, [name, choices])\n\n  return (\n    <CRow className=\"d-flex align-items-center\">\n      <CCol md=\"5\">\n        <TextField\n          label=\"Attribute\"\n          placeholder=\"Eg. Hard-disk\"\n          onChange={(e) => {\n            setName(e.target.value)\n          }}\n          value={record.name}\n          error={nameError}\n        />\n      </CCol>\n      <CCol md=\"6\">\n        <TextField\n          label=\"Possible values\"\n          placeholder=\"Eg. SSD, HDD\"\n          onChange={(e) => {\n            setChoicesInput(e.target.value)\n          }}\n          value={choicesInput}\n        />\n      </CCol>\n      <CCol md=\"1\">\n        <CButton onClick={handleDelete}>\n          <CIcon className=\"text-danger\" name=\"cil-x-circle\" />\n        </CButton>\n      </CCol>\n    </CRow>\n  )\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    attributeLists: state.group.attributes,\n    errors: state.group.errors,\n  }\n}\n\nexport default connect(mapStatetoProps, { setProductGroupAttributes })(\n  GroupRecord\n)\n","import { freeSet } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { CButton } from '@coreui/react'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport infoIcon from 'src/assets/icons/info.svg'\nimport { setProductGroupAttributes } from 'src/reducers/actions/index'\nimport GroupRecord from './GroupRecord'\n\nconst GroupContainer = (props) => {\n  const handleAddGroupClick = () => {\n    // Handle the add warehouse button click.\n    const newRecordID = Math.floor(Math.random() * 100000000 + 1)\n    const newRecord = {\n      id: newRecordID,\n      name: null,\n      values: [],\n    }\n    props.setProductGroupAttributes(props.attributeLists.concat(newRecord))\n  }\n\n  return (\n    <div>\n      {props.attributeLists.map((record) => (\n        <GroupRecord record={record} />\n      ))}\n\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\n        <div>\n          <CButton\n            className=\"mb-0\"\n            style={{ display: 'flex', alignItems: 'center' }}\n            onClick={handleAddGroupClick}\n          >\n            <div style={{ marginRight: 14 }}>\n              <CIcon content={freeSet.cilPlus} size={'lg'} />\n            </div>\n            Add Attribute\n          </CButton>\n        </div>\n        <div>\n          <div\n            className=\"d-flex align-items-center\"\n            style={{ marginRight: '5rem' }}\n          >\n            <img src={infoIcon} alt=\"Info\" style={{ paddingRight: '0.5rem' }} />\n            <span>Add multiple keyword seperated by “,” comma</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    attributeLists: state.group.attributes,\n  }\n}\n\nexport default connect(mapStatetoProps, { setProductGroupAttributes })(\n  GroupContainer\n)\n","import isEmpty from 'src/validations/isEmpty'\n\nconst validateProductGroupCreation = (productGroupData) => {\n  // For warehouses\n  let productGroupsError = {}\n  productGroupData.attributes.forEach((attributeOption) => {\n    let attributeOptionError = {}\n    if (isEmpty(attributeOption.name)) {\n      attributeOptionError.name = 'Please enter attribute name.'\n    }\n    if (!isEmpty(attributeOptionError)) {\n      productGroupsError[attributeOption.id] = attributeOptionError\n    }\n  })\n\n  if (isEmpty(productGroupData.name)) {\n    productGroupsError['name'] = 'Please provide product group name'\n  }\n  return productGroupsError\n}\n\nexport default validateProductGroupCreation\n","import { CButton, CCard, CCardBody, CCol, CRow, CSpinner } from '@coreui/react'\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  associateGroupWithAttribute,\n  createProductGroup,\n  createProductGroupAttribute,\n  getAllProductGroups,\n} from 'src/api/groupRequests'\nimport TextField from 'src/components/TextField'\nimport {\n  setProductGroupAttributes,\n  setProductGroupError,\n  setProductGroupName,\n  updateProductGroups,\n  clearProductGroupError,\n  clearProductGroupAttributes,\n  clearProductGroupName,\n} from 'src/reducers/actions/index'\nimport Toast from 'src/reusable/Toast/Toast'\nimport { ToastMessage } from 'src/reusable/Toast/ToastMessage'\nimport isEmpty from 'src/validations/isEmpty'\nimport validateProductGroupCreation from 'src/validations/productGroup.validation'\nimport GroupContainer from './GroupContainer'\n\nconst AddGroup = ({ isModal, _setShowCreateForm, ...props }) => {\n  const [loading, setLoading] = useState(false)\n\n  const group = props.group\n\n  // Simulate the ESC key for exiting modal.\n  const simulateEscape = (e) => {\n    document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: 27 }))\n  }\n\n  // Clear attributes and errors for initial rendering.\n  useEffect(() => {\n    props.clearProductGroupName()\n    props.clearProductGroupAttributes()\n    props.clearProductGroupError()\n  }, [])\n\n  const handleProductGroupNameChange = (e) => {\n    props.setProductGroupName(e.target.value)\n  }\n\n  const productGroupPayload = () => {\n    if (isEmpty(group.attributes)) {\n      Toast.fire({\n        icon: 'warning',\n        title: ToastMessage('warning', 'At least one attribute is required.'),\n      })\n      return\n    }\n    return {\n      name: group.name,\n    }\n  }\n\n  const attributesPayload = () => {\n    return group.attributes.map((attr) => {\n      const name = `${group.name} - ${attr.name}`\n      const values = attr.values\n\n      // Check the datatype\n      let datatype\n      if (isEmpty(values)) {\n        datatype = 'text'\n      } else {\n        if (values.filter((val) => val.value !== '').length === 0) {\n          datatype = 'text'\n        }\n        datatype = 'enum'\n      }\n\n      let payload = {\n        datatype: datatype,\n        name: name,\n        description: group.name, // Only name to store what was input by user.\n        display_order: 1,\n      }\n      // If data type is enum , then prepare enum values.\n      if (datatype === 'enum') {\n        payload.enum_group = {\n          name: name,\n          values: values,\n        }\n      }\n      return payload\n    })\n  }\n\n  const abortController = new AbortController()\n  const signal = abortController.signal\n\n  const _associateGroupWithAttribute = (groupID, attributeID) => {\n    const attributeFieldPayload = {\n      attributeset: groupID,\n      field: attributeID,\n    }\n    associateGroupWithAttribute(signal, attributeFieldPayload)\n      .then(({ json, response }) => {\n        if (response.ok) {\n          console.log('Field is associated with group')\n          // Clear the field.\n          props.setProductGroupAttributes([])\n          // Clear the name.\n          props.setProductGroupName('')\n          setLoading(false)\n          Toast.fire({\n            icon: 'success',\n            title: ToastMessage('success', 'Product Group created.'),\n          })\n          simulateEscape()\n          getAllProductGroups().then(({ response, json }) => {\n            if (response.ok) {\n              props.updateProductGroups(json)\n            }\n          })\n        } else {\n          setLoading(false)\n          for (const key in json) {\n            if (Object.hasOwnProperty.call(json, key)) {\n              Toast.fire({\n                icon: 'warning',\n                title: ToastMessage('warning', json[key]),\n              })\n            }\n          }\n        }\n      })\n      .catch((e) => {\n        throw e\n      })\n  }\n\n  const _createAttribute = (groupID) => {\n    attributesPayload().forEach((attrPayload) => {\n      createProductGroupAttribute(signal, attrPayload)\n        .then(({ json, response }) => {\n          if (response.ok) {\n            console.log('Product Attribute Created')\n            const attributeID = json.id\n            _associateGroupWithAttribute(groupID, attributeID)\n          } else {\n            setLoading(false)\n            for (const key in json) {\n              if (Object.hasOwnProperty.call(json, key)) {\n                Toast.fire({\n                  icon: 'warning',\n                  title: ToastMessage('warning', json[key]),\n                })\n              }\n            }\n          }\n        })\n        .catch((e) => {\n          throw e\n        })\n    })\n  }\n\n  const _createProductGroup = () => {\n    const payload = productGroupPayload()\n    if (isEmpty(payload)) {\n      setLoading(false)\n      return\n    }\n    createProductGroup(signal, payload)\n      .then(({ json, response }) => {\n        if (response.ok) {\n          console.log('Product Group Created')\n          const groupID = json.id\n\n          // If product group gets created successfully,\n          // then create product attribute.\n          _createAttribute(groupID)\n        } else {\n          setLoading(false)\n          for (const key in json) {\n            if (Object.hasOwnProperty.call(json, key)) {\n              Toast.fire({\n                icon: 'warning',\n                title: ToastMessage('warning', json[key]),\n              })\n            }\n          }\n        }\n      })\n      .catch((e) => {\n        throw e\n      })\n  }\n\n  const submitPayload = () => {\n    const errors = validateProductGroupCreation(group)\n    props.setProductGroupError(errors)\n    if (isEmpty(errors)) {\n      setLoading(true)\n      _createProductGroup()\n    }\n  }\n\n  return (\n    <>\n      <CCard className={isModal ? 'px-3' : 'addpro-custom-card sm-pd mt-4'}>\n        {isModal ? null : (\n          <h4 className=\"outside-card-title mb-4 p-2\">Add Group</h4>\n        )}\n        <CCardBody>\n          <TextField\n            name=\"name\"\n            label=\"Group name\"\n            placeholder=\"Enter group name here\"\n            onChange={handleProductGroupNameChange}\n            value={props.group.name}\n            error={props.group.errors.name && props.group.errors.name}\n          />\n          <GroupContainer />\n          <CRow>\n            <CCol sm=\"2\" md=\"2\">\n              <CButton\n                block\n                variant=\"outline\"\n                color=\"dark\"\n                onClick={(e) => {\n                  simulateEscape(e)\n                  _setShowCreateForm && _setShowCreateForm(false)\n                }}\n              >\n                Cancel\n              </CButton>\n            </CCol>\n\n            <CCol sm=\"2\" md=\"2\">\n              <CButton\n                block\n                color=\"dark\"\n                onClick={submitPayload}\n                disabled={loading}\n              >\n                {loading ? <CSpinner color=\"secondary\" size=\"sm\" /> : 'Save'}\n              </CButton>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nAddGroup.defaultProps = {\n  isModal: false,\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    group: state.group,\n  }\n}\n\nexport default connect(mapStatetoProps, {\n  setProductGroupName,\n  updateProductGroups,\n  setProductGroupAttributes,\n  setProductGroupError,\n  clearProductGroupError,\n  clearProductGroupAttributes,\n  clearProductGroupName,\n})(AddGroup)\n","import React, { useState } from 'react'\nimport { CButton, CSpinner } from '@coreui/react'\n\nimport { connect } from 'react-redux'\nimport { updateProductGroups } from 'src/reducers/actions/index'\nimport { deleteProductGroup, getAllProductGroups } from 'src/api/groupRequests'\n\nimport Toast from 'src/reusable/Toast/Toast'\nimport { ToastMessage } from 'src/reusable/Toast/ToastMessage'\n\nconst DeleteProductGroup = ({ item, ...props }) => {\n  const [message, setMessage] = useState(\n    <p>\n      Are you sure want to delete <strong>{item.name}</strong> group ?\n    </p>\n  )\n\n  // State of deletions.\n  const STATE = Object.freeze({\n    CANT_DELETE: 'CANT_DELETE',\n    NOT_DELETED: 'NOT_DELETED',\n    DELETING: 'DELETING',\n    DELETED: 'DELETED',\n  })\n\n  // Simulate the ESC key for exiting modal.\n  const simulateEscape = () => {\n    document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: 27 }))\n  }\n\n  const [deletion, setDeletion] = useState(STATE.NOT_DELETED)\n\n  const _deleteProductGroup = async (item) => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    setDeletion(STATE.DELETING)\n    setMessage(\n      <p>\n        Deleting <strong>{item.name}</strong> on progress\n      </p>\n    )\n    console.log('[DELETE] PRODUCT GROUP: ', item)\n    await deleteProductGroup(signal, item.id).then(({ json, response }) => {\n      console.log(json, response)\n      if (response.ok) {\n        setDeletion(STATE.DELETED)\n        setMessage(\n          <p>\n            <strong>{item.name}</strong> successfully deleted.\n          </p>\n        )\n        simulateEscape()\n        Toast.fire({\n          icon: 'success',\n          title: ToastMessage('success', 'Group deleted.'),\n        })\n      } else {\n        setDeletion(STATE.CANT_DELETE)\n        setMessage(\n          <p>\n            <strong>{item.name}</strong> group cant be deleted. The products are\n            populated with this group.\n          </p>\n        )\n      }\n    })\n\n    // Get a fresh list of brands.\n    getAllProductGroups().then(({ response, json }) => {\n      if (response.ok) {\n        props.updateProductGroups(json)\n      }\n    })\n  }\n\n  return (\n    <div className=\"text-center\">\n      {message}\n      {deletion == STATE.DELETED || deletion == STATE.CANT_DELETE ? null : (\n        <CButton\n          color=\"danger\"\n          disabled={deletion == STATE.DELETING}\n          onClick={() => {\n            _deleteProductGroup(item)\n          }}\n        >\n          {deletion == STATE.DELETING ? (\n            <CSpinner color=\"secondary\" size=\"sm\" />\n          ) : deletion == STATE.NOT_DELETED ? (\n            'Delete'\n          ) : null}\n        </CButton>\n      )}\n    </div>\n  )\n}\n\nexport default connect(null, { updateProductGroups })(DeleteProductGroup)\n","import { CCol, CRow, CButton } from '@coreui/react'\nimport React, { useState, useEffect } from 'react'\n\nimport TextField from 'src/components/TextField'\nimport isEmpty from 'src/validations/isEmpty'\n\nconst EditGroupRecord = ({ record }) => {\n  const [isEdit, setIsEdit] = useState(false)\n\n  const handleEditChange = (e) => {\n    setIsEdit((prevIsEdit) => !prevIsEdit)\n  }\n\n  const getValues = () => {\n    let values\n    if (record.datatype === 'text') {\n      values = []\n    } else if (record.datatype === 'enum') {\n      values = record.enum_group.values\n    }\n    return values\n  }\n\n  return (\n    <CRow className=\"d-flex align-items-center\">\n      <CCol md=\"4\">\n        <TextField\n          name=\"attributeName\"\n          label=\"Name\"\n          placeholder=\"Attribute Name\"\n          value={record.description}\n          plaintext={!isEdit}\n          disabled={!isEdit}\n        />\n      </CCol>\n      <CCol md=\"5\">\n        <TextField\n          name=\"attributeName\"\n          label=\"Possible Values\"\n          placeholder={\n            isEmpty(getValues()) ? 'Takes input from User' : 'Possible Values'\n          }\n          plaintext={!isEdit}\n          disabled={!isEdit}\n          value={getValues()\n            .map((value) => value.value)\n            .join(',')}\n        />\n      </CCol>\n      <CCol md=\"2\">\n        <CButton\n          color=\"dark\"\n          block={true}\n          onClick={handleEditChange}\n          variant={isEdit ? '' : 'outline'}\n          style={{ borderRadius: '8%' }}\n        >\n          {isEdit ? 'Save Changes' : 'Edit'}\n        </CButton>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default EditGroupRecord\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport EditGroupRecord from './EditGroupRecord'\n\nconst ExistingGroupContainer = ({ attributes }) => {\n  return (\n    <div className=\"mt-5\">\n      <h5 className=\"mb-4\">Existing Attributes</h5>\n      {attributes.map((attribute) => (\n        <EditGroupRecord record={attribute} />\n      ))}\n    </div>\n  )\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    attributes: state.group.existingAttributes,\n  }\n}\n\nexport default connect(mapStatetoProps, null)(ExistingGroupContainer)\n","import { CButton, CCol, CRow } from '@coreui/react'\nimport React, { useState } from 'react'\nimport HorizontalRule from 'src/components/HorizontalRule'\nimport GroupContainer from './GroupContainer'\n\nconst ExpandableGroupContainer = () => {\n  const [show, setShow] = useState(false)\n  const toggleShow = (e) => {\n    setShow((prevShow) => !prevShow)\n  }\n\n  return (\n    <div>\n      <HorizontalRule />\n      <div className=\"d-flex justify-content-end\">\n        <CButton onClick={toggleShow} draggable={true}>\n          {show ? 'Collapse ⬆' : 'Expand ⬇'}\n        </CButton>\n      </div>\n      {show ? (\n        <div>\n          <GroupContainer />\n          <CRow>\n            <CCol sm=\"2\" md=\"2\">\n              <CButton block variant=\"outline\" color=\"dark\">\n                Cancel\n              </CButton>\n            </CCol>\n            <CCol sm=\"2\" md=\"2\">\n              <CButton block color=\"dark\">\n                Save\n              </CButton>\n            </CCol>\n          </CRow>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ExpandableGroupContainer\n","import { CCard, CCardBody } from '@coreui/react'\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport TextField from 'src/components/TextField'\nimport {\n  populateExistingGroupAttributes,\n  setProductGroupAttributes,\n  setProductGroupName,\n  updateProductGroups\n} from 'src/reducers/actions/index'\nimport isEmpty from 'src/validations/isEmpty'\nimport ExistingGroupContainer from './ExistingGroupContainer'\nimport ExpandableGroupContainer from './ExpandableGroupContainer'\n\nconst EditGroup = ({ edit, item, isModal, ...props }) => {\n  useEffect(() => {\n    if (edit && !isEmpty(item)) {\n      console.log('SELECTED ITEM', item)\n      if (!isEmpty(item.fields)) {\n        props.populateExistingGroupAttributes(item.fields)\n        props.setProductGroupName(item.name)\n      }\n    }\n  }, [item])\n\n  return (\n    <div>\n      <CCard className={isModal ? 'px-3' : 'addpro-custom-card sm-pd mt-4'}>\n        {isModal ? null : (\n          <h4 className=\"outside-card-title mb-4 p-2\">Add Group</h4>\n        )}\n        <CCardBody>\n          <TextField\n            name=\"name\"\n            label=\"Group name\"\n            placeholder=\"Enter group name here\"\n            value={props.group.name}\n            disabled={true}\n            plaintext={true}\n          />\n          <ExistingGroupContainer />\n\n          <ExpandableGroupContainer />\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    group: state.group,\n  }\n}\n\nexport default connect(mapStatetoProps, {\n  setProductGroupName,\n  updateProductGroups,\n  setProductGroupAttributes,\n  populateExistingGroupAttributes,\n})(EditGroup)\n","import { CButton, CCard, CCardBody, CDataTable } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { getAllProductGroups } from 'src/api/groupRequests'\nimport editIcon from 'src/assets/icons/edit.svg'\nimport infoIcon from 'src/assets/icons/info.svg'\nimport trashIcon from 'src/assets/icons/trash.svg'\nimport viewIcon from 'src/assets/icons/view.svg'\nimport { ACTIONS } from 'src/constants'\nimport {\n  clearProductGroupAttributes,\n  updateProductGroups,\n} from 'src/reducers/actions/index'\nimport { setLoader } from 'src/reducers/actions/settings.actions'\nimport Modal from '../../components/Modal'\nimport DeleteGroup from './DeleteGroup'\nimport EditGroup from './EditGroup'\n\nconst GroupDataTable = (props) => {\n  useEffect(() => {\n    props.setLoader(true)\n    getAllProductGroups().then(({ response, json }) => {\n      if (response.ok) {\n        props.updateProductGroups(json)\n      }\n      props.setLoader(false)\n    })\n  }, [])\n\n  const fields = [\n    { key: 'id', _style: { width: '3%' }, filter: false },\n    { label: 'Product Group', key: 'name', _style: { width: '20%' } },\n    {\n      key: 'possibleValues',\n      label: 'Attributes & Possible values',\n      _style: { width: '30%' },\n    },\n    { key: 'action', _style: { width: '20%' }, sorter: false, filter: false },\n  ]\n\n  const [action, setAction] = useState('')\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  const attributes = (item) => {\n    return item.fields.length > 0 ? (\n      <span>{item.fields.map((attr) => attr.name).join(', ')}</span>\n    ) : (\n      <span className=\"text-warning\">No attributes set yet. </span>\n    )\n  }\n\n  const attributesAndPossibleValues = (item) => {\n    return item.fields.length > 0 ? (\n      item.fields.map((attr) => (\n        <tr>\n          <td className=\"font-weight-bold\" style={{ width: '50%' }}>\n            {attr.description}\n          </td>\n          {attr.datatype === 'enum' ? (\n            attr.enum_group.values && (\n              <td>\n                {attr.enum_group.values.map((attr) => attr.value).join(', ')}\n              </td>\n            )\n          ) : (\n            <td>Takes input from user.</td>\n          )}\n        </tr>\n      ))\n    ) : (\n      <span className=\"text-warning\">Please set attributes first.</span>\n    )\n  }\n\n  const actions = (item) => (\n    <>\n      <CButton\n        onClick={() => {\n          props.clearProductGroupAttributes()\n          setSelectedItem(item)\n          setAction(ACTIONS.VIEW)\n          setShowModal(true)\n        }}\n        title=\"View Group\"\n      >\n        <img src={viewIcon} alt=\"View\" />\n      </CButton>\n      <CButton\n        onClick={() => {\n          props.clearProductGroupAttributes()\n          setSelectedItem(item)\n          setAction(ACTIONS.EDIT)\n          setShowModal(true)\n        }}\n        title=\"Edit Group\"\n      >\n        <img src={editIcon} alt=\"Edit\" />\n      </CButton>\n      <CButton\n        onClick={() => {\n          setSelectedItem(item)\n          setAction(ACTIONS.DELETE)\n          setShowModal(true)\n        }}\n        title=\"Delete Group\"\n      >\n        <img src={trashIcon} alt=\"Delete\" />\n      </CButton>\n    </>\n  )\n\n  return (\n    <CCard>\n      <CCardBody\n        style={{ background: 'white', borderRadius: '10px', padding: '2rem' }}\n      >\n        {showModal ? (\n          <Modal\n            showModal={showModal}\n            title={`${action} ${selectedItem.name}`}\n            onClose={setShowModal}\n            size={action === 'EDIT' ? 'xl' : 'lg'}\n          >\n            {action === 'DELETE' ? <DeleteGroup item={selectedItem} /> : null}\n            {action === 'EDIT' ? (\n              <EditGroup item={selectedItem} isModal={true} edit={true} />\n            ) : null}\n          </Modal>\n        ) : null}\n        <CDataTable\n          items={props.groups}\n          fields={fields}\n          tableFilter\n          itemsPerPageSelect\n          itemsPerPage={10}\n          hover\n          sorter\n          pagination\n          scopedSlots={{\n            attributes: (item) => <td>{attributes(item)}</td>,\n            possibleValues: (item) => (\n              <table style={{ width: '100%' }} className=\"table\">\n                {attributesAndPossibleValues(item)}\n              </table>\n            ),\n            action: (item) => <td>{actions(item)}</td>,\n          }}\n        />\n\n        <div className=\"d-flex align-items-center\">\n          <img src={infoIcon} alt=\"Info\" style={{ paddingRight: '0.5rem' }} />\n          <span>\n            Editing and deleting are restricted if products are populated for\n            those product groups.\n          </span>\n        </div>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    groups: state.root.productGroups,\n  }\n}\n\nexport default connect(mapStatetoProps, {\n  updateProductGroups,\n  setLoader,\n  clearProductGroupAttributes,\n})(GroupDataTable)\n","import React from 'react'\nimport { CCol, CButton } from '@coreui/react'\n\nconst GroupHeader = ({ _setShowCreateForm }) => {\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-start\">\n        <h4 className=\"outside-card-title mb-4 mr-auto\">Group</h4>\n        <CCol md=\"2\">\n          <CButton\n            block\n            color=\"warning\"\n            onClick={() => {\n              _setShowCreateForm(true)\n            }}\n          >\n            <span style={{ color: '#fff', fontWeight: 600 }}>\n              + &nbsp;Add Group\n            </span>\n          </CButton>\n        </CCol>\n      </div>\n    </div>\n  )\n}\n\nexport default GroupHeader\n","import React, { useState } from 'react'\nimport AddGroup from './AddGroup'\nimport GroupDataTable from './GroupDataTable'\nimport GroupHeader from './GroupHeader'\n\nconst Group = () => {\n  const [showCreateForm, setShowCreateForm] = useState(false)\n  return (\n    <>\n      <GroupHeader _setShowCreateForm={setShowCreateForm} />\n      {showCreateForm ? (\n        <AddGroup isModal={false} _setShowCreateForm={setShowCreateForm} />\n      ) : null}\n      <h4 className=\"mt-5 mb-3 font-weight-bold\">All Product Groups</h4>\n      <GroupDataTable />\n    </>\n  )\n}\n\nexport default Group\n"],"sourceRoot":""}