{"version":3,"sources":["assets/images/forgotPassword.svg","views/pages/ForgotPassword/ForgotPassword.js"],"names":["connect","state","props","useState","email","setEmail","loading","setLoading","className","style","height","backgroundColor","borderRadius","src","forgotPasswordImage","alt","width","onSubmit","event","preventDefault","signal","AbortController","forgotPasswordUserRequest","then","json","response","ok","toast","success","error","name","type","placeholder","autoComplete","onChange","e","target","value","required","xs","color","disabled","size","to"],"mappings":"wNAAe,MAA0B,2C,OCoH1BA,uBAJS,SAACC,GACvB,MAAO,KAG+B,GAAzBD,EA9FQ,SAACE,GACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OACE,8BACE,cAAC,IAAD,CACEC,UAAU,mDACVC,MAAO,CAAEC,OAAQ,SAFnB,SAIE,eAAC,IAAD,CACEF,UAAU,gCACVC,MAAO,CACLE,gBAAiB,QACjBC,aAAc,MAJlB,UAOE,qBACEC,IAAKC,EACLC,IAAI,kBACJN,MAAO,CAAEO,MAAO,WAElB,cAAC,IAAD,CACEP,MAAO,CACLO,MAAO,SAFX,SAKE,eAAC,IAAD,CAAOC,SAxCC,SAACC,GACjBA,EAAMC,iBACNZ,GAAW,GACX,IACMa,GADa,IAAIC,iBACGD,OAE1BE,YAA0BF,EAAQ,CAAEhB,UAASmB,MAAK,YAAwB,EAArBC,KAAqB,EAAfC,SAC5CC,IACXC,IAAMC,QAAQ,2CACdvB,EAAS,KAETsB,IAAME,MAAM,yDAEdtB,GAAW,OA2BL,UACE,iDACA,mBAAGC,UAAU,aAAb,8BACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOsB,KAAK,iBAGhB,cAAC,IAAD,CACEC,KAAK,QACLC,YAAY,QACZC,aAAa,QACbC,SAAU,SAACC,GAAD,OAAO9B,EAAS8B,EAAEC,OAAOC,QACnCA,MAAOjC,EACPkC,UAAU,OAGd,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,MAAM,UACNhC,UAAU,OACVuB,KAAK,SACLU,SAAUnC,EAJZ,SAMGA,EACC,cAAC,IAAD,CAAUkC,MAAM,YAAYE,KAAK,OAEjC,qBAIN,cAAC,IAAD,CAAMH,GAAG,IAAI/B,UAAU,aAAvB,SACE,cAAC,OAAD,CAAMA,UAAU,OAAOmC,GAAG,IAA1B","file":"static/js/22.03332987.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/forgotPassword.dd839642.svg\";","import CIcon from '@coreui/icons-react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport React, { useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport { forgotPasswordUserRequest } from 'src/api/userRequests'\nimport forgotPasswordImage from 'src/assets/images/forgotPassword.svg'\n\nconst ForgotPassword = (props) => {\n  const [email, setEmail] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const loginUser = (event) => {\n    event.preventDefault()\n    setLoading(true)\n    const controller = new AbortController()\n    const signal = controller.signal\n\n    forgotPasswordUserRequest(signal, { email }).then(({ json, response }) => {\n      if (response.ok) {\n        toast.success('A email has been sent for verification.')\n        setEmail('')\n      } else {\n        toast.error('There is no user associated with this e-mail address.')\n      }\n      setLoading(false)\n    })\n  }\n\n  return (\n    <div>\n      <CContainer\n        className=\"d-flex justify-content-around align-items-center\"\n        style={{ height: '100vh' }}\n      >\n        <CCard\n          className=\"p-5 d-flex align-items-center\"\n          style={{\n            backgroundColor: 'white',\n            borderRadius: '3%',\n          }}\n        >\n          <img\n            src={forgotPasswordImage}\n            alt=\"Forgot Password\"\n            style={{ width: '20rem' }}\n          />\n          <CCardBody\n            style={{\n              width: '40rem',\n            }}\n          >\n            <CForm onSubmit={loginUser}>\n              <h1>Forgot Password</h1>\n              <p className=\"text-muted\">Enter your email</p>\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupPrepend>\n                  <CInputGroupText>\n                    <CIcon name=\"cil-user\" />\n                  </CInputGroupText>\n                </CInputGroupPrepend>\n                <CInput\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  required={true}\n                />\n              </CInputGroup>\n              <CRow>\n                <CCol xs=\"6\">\n                  <CButton\n                    color=\"primary\"\n                    className=\"px-4\"\n                    type=\"submit\"\n                    disabled={loading}\n                  >\n                    {loading ? (\n                      <CSpinner color=\"secondary\" size=\"sm\" />\n                    ) : (\n                      'Reset Password'\n                    )}\n                  </CButton>\n                </CCol>\n                <CCol xs=\"6\" className=\"text-right\">\n                  <Link className=\"px-0\" to=\"/\">\n                    Login\n                  </Link>\n                </CCol>\n              </CRow>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CContainer>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, {})(ForgotPassword)\n"],"sourceRoot":""}