{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","reusable/ErrorBody.js","reducers/actions/user.actions.js","api/userRequests.js","views/pages/login/Login.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ErrorBody","props","isEmpty","children","color","style","loginUser","payload","dispatch","type","userTypes","loginError","console","log","logoutUser","noAuthRequestWrapper","url","method","signal","body","header","a","window","navigator","onLine","mainCall","fetch","BASE_URL","headers","JSON","stringify","response","json","store","Toast","fire","icon","title","ToastMessage","loginUserRequest","LOGIN_URL","logoutUserRequest","LOGOUT_URL","connect","state","message","user","useState","email","setEmail","password","setPassword","loading","setLoading","className","height","width","backgroundColor","borderRadius","onSubmit","event","preventDefault","AbortController","then","ok","key","id","localStorage","setItem","userID","token","removeItem","name","placeholder","autoComplete","onChange","e","target","required","xs","disabled","size"],"mappings":"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","file":"static/js/19.37c65abd.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\n\nimport { CForm, CFormText } from '@coreui/react'\nimport isEmpty from '../validations/isEmpty'\n\nconst ErrorBody = (props) => {\n  if (isEmpty(props.children)) {\n    return <span></span>\n  }\n\n  return (\n    <>\n      <CForm>\n        <CFormText color=\"red\" style={{ color: 'red' }}>\n          {props.children}\n        </CFormText>\n      </CForm>\n    </>\n  )\n}\n\nexport default ErrorBody\n","import * as userTypes from 'src/reducers/types/user.types'\n\nexport const loginUser = (payload) => {\n  return (dispatch) => {\n    dispatch({\n      type: userTypes.LOGIN_USER,\n      payload: payload,\n    })\n  }\n}\n\nexport const loginError = (payload) => {\n  console.log('login', payload)\n  return (dispatch) => {\n    dispatch({\n      type: userTypes.LOGIN_ERROR,\n      payload: payload,\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return (dispatch) => {\n    dispatch({\n      type: userTypes.LOGOUT_USER,\n    })\n  }\n}\n","import { BASE_URL } from '../constants/index'\nimport store from '../store'\nimport Toast from 'src/reusable/Toast/Toast'\nimport { ToastMessage } from 'src/reusable/Toast/ToastMessage'\nimport { LOGIN_URL, LOGOUT_URL } from 'src/constants/urls'\n\nexport const noAuthRequestWrapper = async (\n  url,\n  method,\n  signal,\n  body,\n  header\n) => {\n  try {\n    console.log(' window.navigator.onLine ', window.navigator.onLine)\n    if (window.navigator.onLine) {\n      const mainCall = async () => {\n        return await fetch(`${BASE_URL}${url}`, {\n          method: method,\n          signal: signal,\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n        })\n      }\n      var response = await mainCall()\n      var json = await response.json()\n\n      return { json, response }\n    } else {\n      console.log('the app now is offline okay!')\n      store.dispatch({ type: 'SET_LOADER', payload: false })\n      Toast.fire({\n        icon: 'error',\n        title: ToastMessage('error', 'You are offline'),\n      })\n    }\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const loginUserRequest = async (signal, payload) => {\n  try {\n    return await noAuthRequestWrapper(LOGIN_URL, 'POST', signal, payload)\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const logoutUserRequest = async (signal) => {\n  try {\n    return await noAuthRequestWrapper(LOGOUT_URL, 'POST', signal)\n  } catch (e) {\n    throw e\n  }\n}\n","import CIcon from '@coreui/icons-react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CLink,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport React, { useState } from 'react'\nimport { loginUserRequest } from 'src/api/userRequests'\nimport { connect } from 'react-redux'\nimport { loginError, loginUser } from 'src/reducers/actions/user.actions'\nimport ErrorBody from 'src/reusable/ErrorBody'\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const loginUser = (event) => {\n    event.preventDefault()\n    setLoading(true)\n    const controller = new AbortController()\n    const signal = controller.signal\n    loginUserRequest(signal, { email, password }).then(({ json, response }) => {\n      if (response.ok) {\n        const { key, user } = json\n        const { id, email } = user\n        localStorage.setItem('productListingUserKey', key)\n        props.loginUser({\n          userID: id,\n          email,\n          token: key,\n        })\n      } else {\n        localStorage.removeItem('productListingUserKey')\n        props.loginError()\n      }\n      setLoading(false)\n    })\n  }\n\n  return (\n    <div>\n      <CContainer\n        className=\"d-flex justify-content-around align-items-center\"\n        style={{ height: '100vh' }}\n      >\n        <CCard\n          className=\"p-5\"\n          style={{\n            width: '40rem',\n            backgroundColor: 'white',\n            borderRadius: '3%',\n          }}\n        >\n          <CCardBody>\n            <CForm onSubmit={loginUser}>\n              <h1>Login</h1>\n              <p className=\"text-muted\">Sign In to your account</p>\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupPrepend>\n                  <CInputGroupText>\n                    <CIcon name=\"cil-user\" />\n                  </CInputGroupText>\n                </CInputGroupPrepend>\n                <CInput\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  required={true}\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-4\">\n                <CInputGroupPrepend>\n                  <CInputGroupText>\n                    <CIcon name=\"cil-lock-locked\" />\n                  </CInputGroupText>\n                </CInputGroupPrepend>\n                <CInput\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  required={true}\n                />\n              </CInputGroup>\n              <CRow>\n                <CCol xs=\"6\">\n                  <CButton\n                    color=\"primary\"\n                    className=\"px-4\"\n                    type=\"submit\"\n                    disabled={loading}\n                  >\n                    {loading ? (\n                      <CSpinner color=\"secondary\" size=\"sm\" />\n                    ) : (\n                      'Login'\n                    )}\n                  </CButton>\n                </CCol>\n                <CCol xs=\"6\" className=\"text-right\">\n                  <CLink className=\"px-0\">Forgot password?</CLink>\n                </CCol>\n              </CRow>\n            </CForm>\n          </CCardBody>\n          <ErrorBody>{props.message}</ErrorBody>\n        </CCard>\n      </CContainer>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    message: state.user.message,\n  }\n}\n\nexport default connect(mapStateToProps, { loginError, loginUser })(Login)\n"],"sourceRoot":""}