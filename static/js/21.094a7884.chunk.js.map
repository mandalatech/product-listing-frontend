{"version":3,"sources":["views/SKU/index.js"],"names":["SKU","isModal","props","useState","loading","setLoading","autoSKUGeneration","setAutoSKUGeneration","useEffect","setLoader","getSKUSetting","then","json","response","ok","auto_generation","can_user_generate","setSKUAutoGeneration","className","variant","xs","checked","id","onChange","e","target","htmlFor","sm","md","block","color","onClick","signal","AbortController","payload","updateSKUSetting","document","dispatchEvent","KeyboardEvent","keyCode","Toast","fire","icon","title","ToastMessage","console","log","size","defaultProps","connect","state","sku","settings"],"mappings":"yPA8BMA,EAAM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAYC,EAAY,iBACrC,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkDF,oBAAS,GAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAEAC,qBAAU,WACRN,EAAMO,WAAU,GAChBC,cAAgBC,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,KACtB,GAD2C,EAAfC,SACfC,GAAI,CAEf,IAAMC,GAAmBH,EAAKI,kBAC9Bd,EAAMe,qBAAqBF,GAC3BR,EAAqBQ,GAEvBb,EAAMO,WAAU,QAEjB,IAkCH,OACE,8BACE,cAAC,IAAD,CAAOS,UAAU,2BAAjB,SACE,eAAC,IAAD,WACGjB,EAAU,KAAO,oBAAIiB,UAAU,wBAAd,iBAClB,eAAC,IAAD,CAAYC,QAAQ,WAAWD,UAAU,WAAzC,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAME,GAAG,IAAT,UACE,cAAC,IAAD,CACEC,QAASf,EACTgB,GAAG,oBACHC,SA3CO,SAACC,GACtBjB,EAAqBiB,EAAEC,OAAOJ,YA4ClB,cAAC,IAAD,CACEF,QAAQ,WACRD,UAAU,mBACVQ,QAAQ,oBAHV,sCASJ,mBAAGR,UAAU,QAAb,0EAIF,cAAC,IAAD,CAAMA,UAAU,OAAhB,SACE,cAAC,IAAD,CAAMS,GAAG,IAAIC,GAAG,IAAhB,SACE,cAAC,IAAD,CAASC,OAAK,EAACC,MAAM,OAAOC,QAxDlB,WACpB1B,GAAW,GACX,IACM2B,GADkB,IAAIC,iBACGD,OACzBE,EAAU,CACdlB,mBAAoBV,GAEtB6B,YAAiBH,EAAQE,GAASvB,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1CA,EAASC,IAhCjBsB,SAASC,cAAc,IAAIC,cAAc,UAAW,CAAEC,QAAS,MAkCzDC,IAAMC,KAAK,CACTC,KAAM,UACNC,MAAOC,YAAa,UAAW,yBAEjCC,QAAQC,IAAIlC,EAAMC,GAClBR,GAAW,GACXH,EAAMe,sBAAsBL,EAAKI,qBAEjCwB,IAAMC,KAAK,CACTC,KAAM,UACNC,MAAOC,YAAa,UAAW,8BAEjCC,QAAQC,IAAIlC,EAAMC,GAClBR,GAAW,QAiCL,SACGD,EAAU,cAAC,IAAD,CAAU0B,MAAM,YAAYiB,KAAK,OAAU,qBAUtE/C,EAAIgD,aAAe,CACjB/C,SAAS,GASIgD,uBANS,SAACC,GACvB,MAAO,CACLC,IAAKD,EAAME,SAASD,OAIgB,CAAElC,yBAAsBR,eAAjDwC,CACbjD","file":"static/js/21.094a7884.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport {\n  CCard,\n  CCardBody,\n  CRow,\n  CCol,\n  CFormGroup,\n  CInputCheckbox,\n  CLabel,\n  CSpinner,\n  CButton,\n} from '@coreui/react'\n\nimport { ToastMessage } from 'src/reusable/Toast/ToastMessage'\nimport Toast from 'src/reusable/Toast/Toast'\n\nimport { getSKUSetting, updateSKUSetting } from 'src/api/skuRequests'\nimport {\n  setLoader,\n  setSKUAutoGeneration,\n} from 'src/reducers/actions/settings.actions'\n\nimport { connect } from 'react-redux'\n\n// Simulate the ESC key for exiting modal.\nconst simulateEscape = () => {\n  document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: 27 }))\n}\n\nconst SKU = ({ isModal, ...props }) => {\n  const [loading, setLoading] = useState(false)\n  const [autoSKUGeneration, setAutoSKUGeneration] = useState(false)\n\n  useEffect(() => {\n    props.setLoader(true)\n    getSKUSetting().then(({ json, response }) => {\n      if (response.ok) {\n        // Negated\n        const auto_generation = !json.can_user_generate\n        props.setSKUAutoGeneration(auto_generation) // From props\n        setAutoSKUGeneration(auto_generation) // From state\n      }\n      props.setLoader(false)\n    })\n  }, [])\n\n  const handleSKUValue = (e) => {\n    setAutoSKUGeneration(e.target.checked)\n  }\n\n  const submitPayload = () => {\n    setLoading(true)\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    const payload = {\n      can_user_generate: !autoSKUGeneration,\n    }\n    updateSKUSetting(signal, payload).then(({ json, response }) => {\n      if (response.ok) {\n        simulateEscape()\n        Toast.fire({\n          icon: 'success',\n          title: ToastMessage('success', 'SKU Settings saved.'),\n        })\n        console.log(json, response)\n        setLoading(false)\n        props.setSKUAutoGeneration(!json.can_user_generate)\n      } else {\n        Toast.fire({\n          icon: 'warning',\n          title: ToastMessage('warning', 'Error saving SKU Setting'),\n        })\n        console.log(json, response)\n        setLoading(false)\n      }\n    })\n  }\n\n  return (\n    <div>\n      <CCard className=\"addpro-custom-card sm-pd\">\n        <CCardBody>\n          {isModal ? null : <h4 className=\"font-weight-bold mb-4\">SKU</h4>}\n          <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n            <CRow>\n              <CCol xs=\"4\">\n                <CInputCheckbox\n                  checked={autoSKUGeneration}\n                  id=\"autoskugeneration\"\n                  onChange={handleSKUValue}\n                />\n                <CLabel\n                  variant=\"checkbox\"\n                  className=\"form-check-label\"\n                  htmlFor=\"autoskugeneration\"\n                >\n                  Auto SKU Generation\n                </CLabel>\n              </CCol>\n            </CRow>\n            <p className=\"small\">\n              Auto generation wont allow user to input SKU in products.\n            </p>\n          </CFormGroup>\n          <CRow className=\"mt-4\">\n            <CCol sm=\"2\" md=\"2\">\n              <CButton block color=\"dark\" onClick={submitPayload}>\n                {loading ? <CSpinner color=\"secondary\" size=\"sm\" /> : 'Save'}\n              </CButton>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nSKU.defaultProps = {\n  isModal: false,\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sku: state.settings.sku,\n  }\n}\n\nexport default connect(mapStateToProps, { setSKUAutoGeneration, setLoader })(\n  SKU\n)\n"],"sourceRoot":""}